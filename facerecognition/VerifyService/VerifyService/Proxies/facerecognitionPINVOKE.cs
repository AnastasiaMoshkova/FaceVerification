//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace facerecognition {

class facerecognitionPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="SWIGRegisterExceptionCallbacks_facerecognition")]
    public static extern void SWIGRegisterExceptionCallbacks_facerecognition(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_facerecognition")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_facerecognition(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new global::System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new global::System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new global::System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new global::System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new global::System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new global::System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new global::System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new global::System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new global::System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new global::System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new global::System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new global::System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      global::System.Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new global::System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_facerecognition(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_facerecognition(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [global::System.ThreadStatic]
    private static global::System.Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(global::System.Exception e) {
      if (pendingException != null)
        throw new global::System.ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(facerecognitionPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static global::System.Exception Retrieve() {
      global::System.Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(facerecognitionPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  protected class SWIGStringHelper {

    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="SWIGRegisterStringCallback_facerecognition")]
    public static extern void SWIGRegisterStringCallback_facerecognition(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_facerecognition(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static facerecognitionPINVOKE() {
  }


  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_new_ResultVerify")]
  public static extern global::System.IntPtr new_ResultVerify();

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_isVerify_set")]
  public static extern void ResultVerify_isVerify_set(global::System.Runtime.InteropServices.HandleRef jarg1, bool jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_isVerify_get")]
  public static extern bool ResultVerify_isVerify_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_data_set")]
  public static extern void ResultVerify_data_set(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_data_get")]
  public static extern global::System.IntPtr ResultVerify_data_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_data_t_set")]
  public static extern void ResultVerify_data_t_set(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_data_t_get")]
  public static extern string ResultVerify_data_t_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_num_face_set")]
  public static extern void ResultVerify_num_face_set(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_num_face_get")]
  public static extern int ResultVerify_num_face_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_level_set")]
  public static extern void ResultVerify_level_set(global::System.Runtime.InteropServices.HandleRef jarg1, double jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ResultVerify_level_get")]
  public static extern double ResultVerify_level_get(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_delete_ResultVerify")]
  public static extern void delete_ResultVerify(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_new_FaceRecDLib")]
  public static extern global::System.IntPtr new_FaceRecDLib();

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_FaceRecDLib_face_descriptor_calc")]
  public static extern string FaceRecDLib_face_descriptor_calc(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_FaceRecDLib_descriptions_compare")]
  public static extern double FaceRecDLib_descriptions_compare(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_FaceRecDLib_face_verification")]
  public static extern global::System.IntPtr FaceRecDLib_face_verification(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, double jarg4);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_FaceRecDLib_face_verification_threads")]
  public static extern global::System.IntPtr FaceRecDLib_face_verification_threads(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2, string jarg3, double jarg4);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_delete_FaceRecDLib")]
  public static extern void delete_FaceRecDLib(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_Clear")]
  public static extern void ListString_Clear(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_Add")]
  public static extern void ListString_Add(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_size")]
  public static extern uint ListString_size(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_capacity")]
  public static extern uint ListString_capacity(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_reserve")]
  public static extern void ListString_reserve(global::System.Runtime.InteropServices.HandleRef jarg1, uint jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_new_ListString__SWIG_0")]
  public static extern global::System.IntPtr new_ListString__SWIG_0();

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_new_ListString__SWIG_1")]
  public static extern global::System.IntPtr new_ListString__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_new_ListString__SWIG_2")]
  public static extern global::System.IntPtr new_ListString__SWIG_2(int jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_getitemcopy")]
  public static extern string ListString_getitemcopy(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_getitem")]
  public static extern string ListString_getitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_setitem")]
  public static extern void ListString_setitem(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_AddRange")]
  public static extern void ListString_AddRange(global::System.Runtime.InteropServices.HandleRef jarg1, global::System.Runtime.InteropServices.HandleRef jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_GetRange")]
  public static extern global::System.IntPtr ListString_GetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_Insert")]
  public static extern void ListString_Insert(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, string jarg3);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_InsertRange")]
  public static extern void ListString_InsertRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_RemoveAt")]
  public static extern void ListString_RemoveAt(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_RemoveRange")]
  public static extern void ListString_RemoveRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_Repeat")]
  public static extern global::System.IntPtr ListString_Repeat(string jarg1, int jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_Reverse__SWIG_0")]
  public static extern void ListString_Reverse__SWIG_0(global::System.Runtime.InteropServices.HandleRef jarg1);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_Reverse__SWIG_1")]
  public static extern void ListString_Reverse__SWIG_1(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, int jarg3);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_SetRange")]
  public static extern void ListString_SetRange(global::System.Runtime.InteropServices.HandleRef jarg1, int jarg2, global::System.Runtime.InteropServices.HandleRef jarg3);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_Contains")]
  public static extern bool ListString_Contains(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_IndexOf")]
  public static extern int ListString_IndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_LastIndexOf")]
  public static extern int ListString_LastIndexOf(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_ListString_Remove")]
  public static extern bool ListString_Remove(global::System.Runtime.InteropServices.HandleRef jarg1, string jarg2);

  [global::System.Runtime.InteropServices.DllImport("facerecognition", EntryPoint="CSharp_facerecognition_delete_ListString")]
  public static extern void delete_ListString(global::System.Runtime.InteropServices.HandleRef jarg1);
}

}
